package com.tencent.weixin.controller;import com.tencent.weixin.util.InitPageData;import org.apache.shiro.SecurityUtils;import org.apache.shiro.authc.AuthenticationException;import org.apache.shiro.authc.UsernamePasswordToken;import org.apache.shiro.subject.Subject;import org.springframework.stereotype.Controller;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.RequestMethod;import org.springframework.web.bind.annotation.RequestParam;import org.springframework.web.bind.annotation.ResponseBody;import org.springframework.web.servlet.ModelAndView;import com.tencent.weixin.util.IpUtil;import com.tencent.weixin.util.WebUtil;import javax.servlet.http.HttpServletRequest;import java.util.Map;@Controller@RequestMappingpublic class LoginController {//    @Autowired//    private ILogService logService;    /**     * 登录请求，（注：登出请求无需编写，配置在shiro中）     * @param username     * @param password     * @param request     * @param session     * @return     */    @SuppressWarnings("unchecked")    @RequestMapping(value = "login", method = RequestMethod.POST)    @ResponseBody    public InitPageData login(@RequestParam("username") String username,                              @RequestParam("password") String password, HttpServletRequest request) {        InitPageData context = new InitPageData();        Subject subject = SecurityUtils.getSubject();        try{            subject.login(new UsernamePasswordToken(username, password));            if (subject.isAuthenticated()) {                Map<String,Object> userMap = (Map<String, Object>) subject.getSession().getAttribute("userMap");                userMap.put("clientIp",  WebUtil.getIp(request));//                logService.addSysLog("登录", uname, WebUtil.getIp(request), null, userMap.get("user_name")+"登录了");            } else {                context.setMsg("用户名或密码错误！");                context.setSuccess(false);            }        }catch(AuthenticationException ex){            context.setMsg(ex.getMessage());            context.setSuccess(false);        }catch(Throwable th){            context.setMsg(th.getMessage());            context.setSuccess(false);        }        return context;    }     @RequestMapping("loginIndex")    public ModelAndView loginIndex(ModelAndView mav) {        mav.setViewName("login");        mav.addObject("serverIp", IpUtil.getLocalIP());        return mav;    }    @RequestMapping("index")    public ModelAndView index(ModelAndView mav) {        mav.setViewName("index");        mav.addObject("serverIp", IpUtil.getLocalIP());        return mav;    }}